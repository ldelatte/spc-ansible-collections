##### secured-pc ##### auteur: Laurent Delatte, 2024
# configure sshd environment

- block:

  - name: sshd dirs
    file:
      path: "{{ ansible_user_dir }}/Téléchargements/sshd"
      state: directory
      owner: "{{ xt_ct_user }}"
      group: "{{ ansible_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0770
  - template:
      src: bashrc.sh
      dest: "{{ ansible_user_dir }}/Téléchargements/sshd/.bash_profile"
      owner: "{{ xt_ct_user }}"
      group: "{{ ansible_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0540
  - template:
      src: shadow
      dest: "{{ ansible_user_dir }}/Téléchargements/sshd/.shadow.spc"
      owner: "{{ xt_ct_user }}"
      group: "{{ ansible_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0460
  - file:
      path: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys"
      state: directory
      owner: "{{ xt_ct_user }}"
      group: "{{ xt_ct_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0755

  - name: generates a new set of keys for sshd
    command: ssh-keygen -t rsa -b 4096 -N "" -f {{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_rsa_key
    args:
      creates: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_rsa_key"
  - command: ssh-keygen -t ecdsa -b 521 -N "" -f {{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_ecdsa_key
    args:
      creates: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_ecdsa_key"
  - command: ssh-keygen -t ed25519 -N "" -f {{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_ed25519_key
    args:
      creates: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys/ssh_host_ed25519_key"
  - file:
      path: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys/{{ item }}"
      owner: "{{ xt_ct_user }}"
      group: "{{ xt_ct_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0400
    loop:
    - ssh_host_rsa_key
    - ssh_host_ecdsa_key
    - ssh_host_ed25519_key
  - file:
      path: "{{ ansible_user_dir }}/Téléchargements/sshd/.keys/{{ item }}"
      owner: "{{ xt_ct_user }}"
      group: "{{ xt_ct_user }}"
      seuser: "{{ se_ct_user }}"
      serole: "{{ se_ct_role }}"
      setype: "{{ se_ct_type }}"
      selevel: "{{ se_ct_level.xt }}"
      mode: 0444
    loop:
    - ssh_host_rsa_key.pub
    - ssh_host_ecdsa_key.pub
    - ssh_host_ed25519_key.pub

  become: yes

- name: local sshd exec
  template:
    src: pk-sshd.service
    dest: "{{ svc_dir }}/pk-sshd.service"
    mode: 0440
- template:
    src: pod-sshd.yml
    dest: "{{ pods_dir }}/pod-sshd.yml"
    mode: 0440
- file:
    path: "{{ ansible_user_dir }}/.config/systemd/user/pk-sshd.service"
    state: link
    src: ../../svc/pk-sshd.service
    force: yes
- command: podman pull docker.io/ldelatte/sshd
- service:
    name: pk-sshd.service
    enabled: no
    scope: user
    daemon_reload: yes

- debug:
    msg:
    -
    -
    - You must then configure the ~/Téléchargements/sshd/.shadow file with a password. See SPC example produced: .shadow.spc
    -
    -
